<Window x:Class="XactTodo.WinUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:XactTodo.WinUI"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.DataContext>
        <!--声明使用MainViewModel类的实例作为DataContext-->
        <local:MainViewModel/>
    </Window.DataContext>
    <Window.Style>
        <Style TargetType="Window">
            <!--Setter Property="Background" Value="Transparent" /-->
            <Setter Property="WindowStyle" Value="None" />
            <Setter Property="ResizeMode" Value="CanResize" />
            <Setter Property="AllowsTransparency" Value="True" />
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <!--注意：如果CaptionHeight属性设置过大，将会使右上角的按钮无法点击-->
                    <WindowChrome CaptionHeight="8" ResizeBorderThickness="4" />
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>
    <Grid Margin="10,10,10,10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid>
            <Image Source="{StaticResource Image.AppTitle}" Height="28" HorizontalAlignment="Left" >
            </Image>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Style="{StaticResource Style.Button.Lookless}"
						Command="{Binding AddMatterCommand}"
						Width="24"
						Height="24"
						ToolTip="add new matter"
						Margin="4,0,4,2">
                    <Image Source="{DynamicResource Image.Write}" />
                </Button>
                <Button Style="{StaticResource Style.Button.Lookless}"
						Command="{Binding ReloadMattersCommand}"
						Width="24"
						Height="24"
						ToolTip="refresh list"
						Margin="4,0,4,2">
                    <Image Source="{StaticResource Image.Refresh}" />
                </Button>
                <Button Style="{StaticResource Style.Button.Lookless}"
						Command="{Binding ShowSettingsCommand}"
						Width="24"
						Height="24"
						ToolTip="Many settings"
						Margin="4,0,4,2">
                    <Image Source="{StaticResource Image.Settings}" />
                </Button>
            </StackPanel>
        </Grid>
        <!--ItemContainerStyle="{StaticResource ItemStyle}"-->
        <ListBox Grid.Row="1" x:Name="lstMatters" x:FieldModifier="public"  ItemsSource="{Binding Matters}" Background="{x:Null}" ScrollViewer.VerticalScrollBarVisibility="Hidden" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                    <EventSetter Event="MouseDoubleClick" Handler="ListBoxItem_MouseDoubleClick"/>
                    <!--Style.Setters>
                        <Setter Property="localCommand:CommandBehavior.Event" Value="MouseDoubleClick"/>
                        <Setter Property="localCommand:CommandBehavior.Command" Value="{Binding DataContext.ShowMatterCommand,RelativeSource={RelativeSource FindAncestor,AncestorType=ListBox}}"/>
                        <Setter Property="localCommand:CommandBehavior.CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}"/>
                    </Style.Setters-->
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding Subject}" Grid.Column="0" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" FontSize="14"  Margin="0,0,0,2" Foreground="Black" >
                        </TextBlock>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Height="16" Width="16" Style="{StaticResource Style.Button.Lookless}"
                                            Command="{Binding Path=DataContext.MatterFinishedCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListBox}}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=ListBoxItem}}">
                                <Image Source="{StaticResource Image.Tick}" />
                            </Button>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Window>
